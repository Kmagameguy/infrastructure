---

remote_user: "{{ matrix_user }}"
ansible_become_pass: "{{ matrix_become_password }}"

docker_users:
  - "{{ matrix_user }}"

appdata_path: "/home/{{ matrix_user }}/appdata"
containers:
  - service_name: paperless-ng
    container_name: paperless-ng
    image: lscr.io/linuxserver/paperless-ng
    active: true
    ports:
      - "{{ secret_paperless_port }}:{{ secret_paperless_port }}"
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/paperless-ng/config:/config"
      - "{{ appdata_path }}/paperless-ng/data:/data"
    restart: unless-stopped
  ###
  - service_name: jellyfin
    container_name: jellyfin
    image: ghcr.io/linuxserver/jellyfin
    active: true
    ports:
      - "{{ secret_jellyfin_http_port }}:{{ secret_jellyfin_http_port }}"
      - "{{ secret_jellyfin_https_port }}:{{ secret_jellyfin_https_port }}"
      - "{{ secret_jellyfin_discovery_port }}:{{ secret_jellyfin_discovery_port }}/udp"
      - "{{ secret_jellyfin_discovery_port2 }}:{{ secret_jellyfin_discovery_port2 }}/udp"
    devices:
      - /dev/dri:/dev/dri
    include_global_env_vars: true
    environment:
      - "JELLYFIN_PublishedServerUrl={{ secret_jellyfin_url }}"
    volumes:
      - "{{ appdata_path }}/jellyfin:/config"
      - "{{ data_root_dir }}/Videos/Movies:/data/movies"
      - "{{ data_root_dir }}/Videos/TV:/data/tvshows"
      - "{{ data_root_dir }}/Videos/YouTube:/data/youtube"
      - "{{ data_root_dir }}/Music/Library:/data/music"
      - "{{ data_root_dir}}/InternetRadio:/data/internetradio"
    restart: unless-stopped
  ###
  - service_name: podgrab
    container_name: podgrab
    image: akhilrex/podgrab
    active: true
    ports:
      - "{{ secret_podgrab_host_port }}:{{ secret_podgrab_client_port }}"
    restart: unless-stopped
    environment:
      - CHECK_FREQUENCY=240
    volumes:
      - "{{ appdata_path }}/podgrab:/config"
      - "{{ data_root_dir}}/InternetRadio:/assets"
  ###
  - service_name: diun
    container_name: diun
    image: crazymax/diun:latest
    active: true
    command:
      - serve
    include_global_env_vars: true
    environment:
      - "LOG_LEVEL=info"
      - "LOG_JSON=false"
      - "DIUN_WATCH_WORKERS=20"
      - "DIUN_WATCH_SCHEDULE=0 */6 * * *"
      - "DIUN_PROVIDERS_DOCKER=true"
      - "DIUN_PROVIDERS_DOCKER_WATCHBYDEFAULT=true"
      - "{{ diun_notif }}"
      - "{{ diun_msg }}"
    restart: unless-stopped
  ###
  - service_name: scrutiny
    container_name: scrutiny
    image: ghcr.io/linuxserver/scrutiny
    active: true
    privileged: true
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN
    include_global_env_vars: true
    environment:
      - SCRUTINY_WEB=true
      - SCRUTINY_COLLECTOR=true
    volumes:
      - "{{ appdata_path }}/scrutiny:/config"
      - /run/udev:/run/udev:ro
    ports:
      - "{{ secret_scrutiny_host_port }}:{{ secret_scrutiny_client_port }}"
    devices: "{{ matrix_all_disks }}"
    restart: unless-stopped
  ###
  - service_name: freshrss
    container_name: freshrss
    image: linuxserver/freshrss:latest
    active: true
    depends_on:
      - mariadb
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/freshrss:/config"
    ports:
      - "{{ secret_freshrss_host_port }}:{{ secret_freshrss_client_port }}"
    restart: unless-stopped
  ###
  - service_name: mariadb
    container_name: mariadb
    image: linuxserver/mariadb:latest
    active: true
    include_global_env_vars: true
    environment: "{{ secret_mysql_config }}"
    volumes:
      - "{{ appdata_path }}/mariadb:/config"
    ports:
      - "{{ secret_mysql_host_port }}:{{ secret_mysql_client_port}}"
    restart: unless-stopped
  ###
  - service_name: kiwix
    container_name: kiwix
    image: kiwix/kiwix-serve
    active: true
    include_global_env_vars: true
    environment: "{{ secret_kiwix_data }}"
    volumes:
      - "{{ data_root_dir }}/Wikipedia:/data"
    ports:
      - "{{ secret_kiwix_host_port }}:{{ secret_kiwix_client_port}}"
    restart: unless-stopped
  ###
  - service_name: uptime-kuma
    container_name: uptime-kuma
    image: louislam/uptime-kuma:latest
    active: true
    volumes:
      - "{{ appdata_path }}/uptime-kuma:/app/data"
    ports:
      - "{{ secret_uptime_kuma_host_port }}:{{ secret_uptime_kuma_client_port }}"
    restart: unless-stopped
  ###
  - service_name: homeassistant
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    active: true
    include_global_env_vars: true
    network_mode: host
    privileged: true
    volumes:
      - "{{ appdata_path }}/homeassistant:/config"
      - "/etc/localtime:/etc/localtime:ro"
    restart: unless-stopped
  ###
  - service_name: homer
    container_name: homer
    image: b4bz/homer
    active: true
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/homer:/www/assets"
    ports:
      - "{{ secret_homer_port }}:{{ secret_homer_port }}"
    restart: unless-stopped
  ###
  - service_name: gitea
    container_name: gitea
    image: gitea/gitea:latest
    active: true
    include_global_env_vars: true
    environment: "{{ secret_gitea_db_config }}"
    networks:
      - gitea
    volumes:
      - "{{ appdata_path }}/gitea:/data"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    ports: "{{ secret_gitea_ports }}"
    depends_on:
      - db
    restart: unless-stopped
  ###
  - service_name: db
    container_name: db
    image: postgres:latest
    active: true
    include_global_env_vars: true
    environment: "{{ secret_matrix_db_config }}"
    volumes:
      - "{{ appdata_path }}/postgresql/initdb.d:/docker-entrypoint-initdb.d"
      - "{{ appdata_path }}/postgresql/data:/var/lib/postgresql/data"
      - "{{ appdata_path }}/postgresql/postgres.conf:/etc/postgresql/postgresql.conf"
    networks:
      - gitea
    restart: always
  ###
  - service_name: adminer
    container_name: adminer
    image: adminer
    active: true
    networks:
      - gitea
    ports:
      - "{{ secret_adminer_ports }}"
    restart: always
networks:
  gitea:
    external: false
