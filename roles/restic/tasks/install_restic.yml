---

- name: include OS-specific variables.
  ansible.builtin.include_vars: "{{ ansible_distribution }}.yml"

- name: "Check if {{ restic_install_path }} exists."
  ansible.builtin.stat:
    path: "{{ restic_install_path }}"
  register: is_installed

- name: Set restic installation status.
  ansible.builtin.set_fact:
    restic_installed: "{{ is_installed.stat.exists }}"

- name: Get restic version.
  ansible.builtin.shell: |
    set -o pipefail
    {{ is_installed.stat.path }} version | \
    grep -oP 'restic\ \K[0-9]*\.[0-9]*\.[0-9]*'
  args:
    executable: /bin/bash
  register: installed_version_register
  changed_when: false
  when: restic_installed

- name: Query GitHub API for restic release info.
  ansible.builtin.uri:
    url: "{{ restic_releases_api }}"
    return_content: true
  register: release_version_register

- name: Identify latest version of restic.
  ansible.builtin.set_fact:
    restic_ver: "{{ release_version_register.json.tag_name|regex_replace('v') }}"

- name: Perform restic installation via github source
  block:
    - name: "Ensure {{ restic_download_directory }} does not exist."
      ansible.builtin.file:
        path: "{{ restic_download_directory }}"
        state: absent

    - name: "Create {{ restic_download_directory }}."
      ansible.builtin.file:
        path: "{{ restic_download_directory }}"
        state: directory
        mode: 0755

    - name: Download restic.
      ansible.builtin.get_url:
        url: "{{ restic_repo_url }}/v{{ restic_ver }}/restic_{{ restic_ver }}_{{ restic_distro }}.bz2"
        dest: "{{ restic_download_directory }}"
        force: true
        owner: root
        group: root
        mode: +x

    - name: Identify restic compressed file.
      ansible.builtin.set_fact: file_name="restic_{{ restic_ver }}_{{ restic_distro }}.bz2"

    - name: Unzip and update restic.
      ansible.builtin.shell: |
        set -o pipefail
        cd {{ restic_download_directory }} &&
        bzip2 -d {{ file_name }} &&
        mv {{ file_name | regex_replace('.bz2') }} {{ restic_install_path }}
      args:
        executable: /bin/bash

  when: not restic_installed or (restic_installed and installed_version_register.stdout != restic_ver )
