---

- name: "Check if {{ ytdlp_install_path }} exists."
  ansible.builtin.stat:
    path: "{{ ytdlp_install_path }}"
  register: is_installed

- name: "Set yt-dlp installation status."
  ansible.builtin.set_fact:
    ytdlp_installed: "{{ is_installed.stat.exists }}"

- name: "Get yt-dlp version."
  ansible.builtin.shell: "{{ is_installed.stat.path }} --version"
  register: installed_version_register
  changed_when: false
  when: ytdlp_installed

- name: "Query GitHub API for yt-dlp release info."
  ansible.builtin.uri:
    url: "{{ ytdlp_releases_api }}"
    return_content: true
  register: release_version_register

- name: "Identify latest version of yt-dlp."
  ansible.builtin.set_fact:
    ytdlp_ver: "{{ release_version_register.json.tag_name }}"

- name: Download & install yt-dlp from source
  block:
    - name: "Ensure {{ ytdlp_download_directory }} does not exist."
      ansible.builtin.file:
        path: "{{ ytdlp_download_directory }}"
        state: absent

    - name: "Create {{ ytdlp_download_directory }}."
      ansible.builtin.file:
        path: "{{ ytdlp_download_directory }}"
        state: directory
        mode: 0755

    - name: "Download yt-dlp."
      ansible.builtin.get_url:
        url: "{{ ytdlp_repo_url }}/{{ ytdlp_ver }}/{{ ytdlp_binary }}"
        dest: "{{ ytdlp_download_directory }}"
        force: true
        owner: root
        group: root
        mode: +x

    - name: "Install yt-dlp."
      ansible.builtin.shell: |
        cd {{ ytdlp_download_directory }} &&
        mv {{ ytdlp_binary }} {{ ytdlp_install_path }}

  when: not ytdlp_installed or (ytdlp_installed and installed_version_register.stdout != ytdlp_ver)
